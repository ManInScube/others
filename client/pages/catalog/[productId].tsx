import Layout from '@/components/layout/Layout'
import Head from 'next/head'
import favicon from '@/public/images/favicon.png';
import { useUnit } from 'effector-react';
import { $product, setProduct } from '@/context/product';
import { getProductFx } from '@/app/api/products';
import { IQueryParams } from '@/types/catalog';
import { toast } from 'react-toastify';
import { useEffect, useState } from 'react';
import ProductPage from '@/components/templates/ProductPage/ProductPage';
import { useRouter } from 'next/router';
import Custom404 from '../404';


export default function CatalogProductPage({query}: {query: IQueryParams}){
    const product = useUnit($product);
    const router = useRouter()
    const [error, setError] = useState<boolean>(false);

    useEffect(()=>{
        loadProduct()
    },[router.asPath])

    const loadProduct = async () =>{
        try {
            const data = await getProductFx(`/products/find/${query.productId}`)

            if(!data){
                setError(true)
                return
            }

            setProduct(data)
        } catch (error) {
            toast.error((error as Error).message)
        }
    }

    return (
        <>
          <Head>
            <title>Others - {product.name}</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href={favicon.src} />
          </Head>
          <Layout>
            {error ? (
            <Custom404/>
            ):
            <ProductPage />
            }
          </Layout>
    
        </>
    )
}

export async function getServerSideProps(context: {query: IQueryParams}){
    return {
        props: {query: {...context.query}}
    }
}